-- Cycle --
status: 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 
cptr:   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  scheduling 1: 0, 0
  scheduling 2: 1, 1
-- Cycle --
status: 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 
cptr:   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  scheduling 3: 2, 2
  scheduling 4: 3, 3
-- Cycle --
status: 2 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 
cptr:   0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  scheduling 5: 4, 0
  scheduling 6: 5, 0
-- Cycle --
status: 2 1 1 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 
cptr:   0 2 3 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  scheduling 7: 6, 0
  scheduling 8: 7, 7
-- Cycle --
status: 2 1 1 1 1 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 
cptr:   0 2 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  scheduling 9: 8, 8
  scheduling 10: 9, 9
-- Cycle --
status: 2 1 1 1 1 1 1 1 0 3 3 3 3 3 3 3 3 3 3 3 
cptr:   0 2 3 4 5 6 7 8 0 0 0 0 0 0 0 0 0 0 0 0 
  scheduling 11: 10, 10
  scheduling 12: 11, 11
-- Cycle --
status: 2 1 1 1 1 1 1 1 1 1 0 3 3 3 3 3 3 3 3 3 
cptr:   0 2 3 4 5 6 7 8 9 10 0 0 0 0 0 0 0 0 0 0 
  scheduling 13: 12, 12
  scheduling 14: 13, 13
-- Cycle --
status: 2 1 1 1 1 1 1 1 1 1 1 1 0 3 3 3 3 3 3 3 
cptr:   0 2 3 4 5 6 7 8 9 10 11 12 0 0 0 0 0 0 0 0 
  scheduling 15: 14, 14
  scheduling 16: 15, 15
-- Cycle --
status: 2 1 1 1 1 1 1 1 1 1 1 1 1 1 0 3 3 3 3 3 
cptr:   0 2 3 4 5 6 7 8 9 10 11 12 13 14 0 0 0 0 0 0 
-- Cycle --
status: 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 3 3 3 
cptr:   0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 0 0 0 0 
[(sig stall), (sig outStatus), (sig outCptr), (sig inA_0), (sig inB_0), (sig inOut_0), (sig inValid_0), (sig inA_1), (sig inB_1), (sig inOut_1), (sig inValid_1), (sig ready0_valid), (sig ready0), (sig ready1_valid), (sig ready1)]
/* Generated by Yosys 0.9 (git sha1 UNKNOWN, gcc 10.2.0 -march=x86-64 -mtune=generic -O2 -fno-plt -fPIC -Os) */

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.MappingTableCptr" *)
module MappingTableCptr(write_addr0, write_data0, write_en1, write_addr1, write_data1, write_en2, write_addr2, write_data2, write_en3, write_addr3, write_data3, read_addr0, read_data0, read_addr1, read_data1, clk, write_en0);
  (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  reg [5:0] mem_r_addr;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  reg [5:0] \mem_r_addr$11 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  wire [5:0] mem_r_data;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  wire [5:0] \mem_r_data$12 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] mem_w_addr;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$3 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$6 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$9 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] mem_w_data;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_data$10 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_data$4 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_data$7 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg mem_w_en;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$2 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$5 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$8 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  input [5:0] read_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  input [5:0] read_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  output [5:0] read_data0;
  reg [5:0] read_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  output [5:0] read_data1;
  reg [5:0] read_data1;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr2;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr3;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [5:0] write_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [5:0] write_data1;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [5:0] write_data2;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [5:0] write_data3;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en0;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en1;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en2;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en3;
  reg [5:0] mem [63:0];
  initial begin
    mem[0] = 6'h00;
    mem[1] = 6'h00;
    mem[2] = 6'h00;
    mem[3] = 6'h00;
    mem[4] = 6'h00;
    mem[5] = 6'h00;
    mem[6] = 6'h00;
    mem[7] = 6'h00;
    mem[8] = 6'h00;
    mem[9] = 6'h00;
    mem[10] = 6'h00;
    mem[11] = 6'h00;
    mem[12] = 6'h00;
    mem[13] = 6'h00;
    mem[14] = 6'h00;
    mem[15] = 6'h00;
    mem[16] = 6'h00;
    mem[17] = 6'h00;
    mem[18] = 6'h00;
    mem[19] = 6'h00;
    mem[20] = 6'h00;
    mem[21] = 6'h00;
    mem[22] = 6'h00;
    mem[23] = 6'h00;
    mem[24] = 6'h00;
    mem[25] = 6'h00;
    mem[26] = 6'h00;
    mem[27] = 6'h00;
    mem[28] = 6'h00;
    mem[29] = 6'h00;
    mem[30] = 6'h00;
    mem[31] = 6'h00;
    mem[32] = 6'h00;
    mem[33] = 6'h00;
    mem[34] = 6'h00;
    mem[35] = 6'h00;
    mem[36] = 6'h00;
    mem[37] = 6'h00;
    mem[38] = 6'h00;
    mem[39] = 6'h00;
    mem[40] = 6'h00;
    mem[41] = 6'h00;
    mem[42] = 6'h00;
    mem[43] = 6'h00;
    mem[44] = 6'h00;
    mem[45] = 6'h00;
    mem[46] = 6'h00;
    mem[47] = 6'h00;
    mem[48] = 6'h00;
    mem[49] = 6'h00;
    mem[50] = 6'h00;
    mem[51] = 6'h00;
    mem[52] = 6'h00;
    mem[53] = 6'h00;
    mem[54] = 6'h00;
    mem[55] = 6'h00;
    mem[56] = 6'h00;
    mem[57] = 6'h00;
    mem[58] = 6'h00;
    mem[59] = 6'h00;
    mem[60] = 6'h00;
    mem[61] = 6'h00;
    mem[62] = 6'h00;
    mem[63] = 6'h00;
  end
  always @(posedge clk) begin
    if (\mem_w_en$8 ) mem[\mem_w_addr$9 ] <= \mem_w_data$10 ;
    if (\mem_w_en$5 ) mem[\mem_w_addr$6 ] <= \mem_w_data$7 ;
    if (\mem_w_en$2 ) mem[\mem_w_addr$3 ] <= \mem_w_data$4 ;
    if (mem_w_en) mem[mem_w_addr] <= mem_w_data;
  end
  assign \mem_r_data$12  = mem[\mem_r_addr$11 ];
  assign mem_r_data = mem[mem_r_addr];
  always @* begin
    mem_w_en = 1'h0;
    mem_w_en = write_en0;
  end
  always @* begin
    mem_w_addr = 6'h00;
    mem_w_addr = write_addr0;
  end
  always @* begin
    \mem_w_addr$9  = 6'h00;
    \mem_w_addr$9  = write_addr3;
  end
  always @* begin
    \mem_w_data$10  = 6'h00;
    \mem_w_data$10  = write_data3;
  end
  always @* begin
    mem_r_addr = 6'h00;
    mem_r_addr = read_addr0;
  end
  always @* begin
    read_data0 = 6'h00;
    read_data0 = mem_r_data;
  end
  always @* begin
    \mem_r_addr$11  = 6'h00;
    \mem_r_addr$11  = read_addr1;
  end
  always @* begin
    read_data1 = 6'h00;
    read_data1 = \mem_r_data$12 ;
  end
  always @* begin
    mem_w_data = 6'h00;
    mem_w_data = write_data0;
  end
  always @* begin
    \mem_w_en$2  = 1'h0;
    \mem_w_en$2  = write_en1;
  end
  always @* begin
    \mem_w_addr$3  = 6'h00;
    \mem_w_addr$3  = write_addr1;
  end
  always @* begin
    \mem_w_data$4  = 6'h00;
    \mem_w_data$4  = write_data1;
  end
  always @* begin
    \mem_w_en$5  = 1'h0;
    \mem_w_en$5  = write_en2;
  end
  always @* begin
    \mem_w_addr$6  = 6'h00;
    \mem_w_addr$6  = write_addr2;
  end
  always @* begin
    \mem_w_data$7  = 6'h00;
    \mem_w_data$7  = write_data2;
  end
  always @* begin
    \mem_w_en$8  = 1'h0;
    \mem_w_en$8  = write_en3;
  end
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.MappingTableStatus" *)
module MappingTableStatus(write_data0, write_en0, read_addr0, read_data0, write_en1, write_addr1, write_data1, read_addr1, read_data1, write_en2, write_addr2, write_data2, write_addr3, write_data3, write_en3, read_addr2, read_data2, write_en4, write_addr4, write_data4, read_addr3, read_data3, write_en5, write_addr5, write_data5, read_addr4, read_data4, write_en6, write_addr6, write_data6, read_addr5, read_data5, write_en7, write_addr7, write_data7, clk, write_addr0);
  (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  reg [5:0] mem_r_addr;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  reg [5:0] \mem_r_addr$23 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  reg [5:0] \mem_r_addr$25 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  reg [5:0] \mem_r_addr$27 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  reg [5:0] \mem_r_addr$29 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  reg [5:0] \mem_r_addr$31 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  wire [1:0] mem_r_data;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  wire [1:0] \mem_r_data$24 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  wire [1:0] \mem_r_data$26 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  wire [1:0] \mem_r_data$28 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  wire [1:0] \mem_r_data$30 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:93" *)
  wire [1:0] \mem_r_data$32 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] mem_w_addr;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$12 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$15 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$18 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$21 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$3 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$6 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [5:0] \mem_w_addr$9 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [1:0] mem_w_data;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [1:0] \mem_w_data$10 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [1:0] \mem_w_data$13 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [1:0] \mem_w_data$16 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [1:0] \mem_w_data$19 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [1:0] \mem_w_data$22 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [1:0] \mem_w_data$4 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg [1:0] \mem_w_data$7 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg mem_w_en;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$11 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$14 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$17 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$2 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$20 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$5 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:85" *)
  reg \mem_w_en$8 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  input [5:0] read_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  input [5:0] read_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  input [5:0] read_addr2;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  input [5:0] read_addr3;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  input [5:0] read_addr4;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  input [5:0] read_addr5;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  output [1:0] read_data0;
  reg [1:0] read_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  output [1:0] read_data1;
  reg [1:0] read_data1;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  output [1:0] read_data2;
  reg [1:0] read_data2;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  output [1:0] read_data3;
  reg [1:0] read_data3;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  output [1:0] read_data4;
  reg [1:0] read_data4;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  output [1:0] read_data5;
  reg [1:0] read_data5;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr2;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr3;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr4;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr5;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr6;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  input [5:0] write_addr7;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [1:0] write_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [1:0] write_data1;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [1:0] write_data2;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [1:0] write_data3;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [1:0] write_data4;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [1:0] write_data5;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [1:0] write_data6;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  input [1:0] write_data7;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en0;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en1;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en2;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en3;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en4;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en5;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en6;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  input write_en7;
  reg [1:0] mem [63:0];
  initial begin
    mem[0] = 2'h3;
    mem[1] = 2'h3;
    mem[2] = 2'h3;
    mem[3] = 2'h3;
    mem[4] = 2'h3;
    mem[5] = 2'h3;
    mem[6] = 2'h3;
    mem[7] = 2'h3;
    mem[8] = 2'h3;
    mem[9] = 2'h3;
    mem[10] = 2'h3;
    mem[11] = 2'h3;
    mem[12] = 2'h3;
    mem[13] = 2'h3;
    mem[14] = 2'h3;
    mem[15] = 2'h3;
    mem[16] = 2'h3;
    mem[17] = 2'h3;
    mem[18] = 2'h3;
    mem[19] = 2'h3;
    mem[20] = 2'h3;
    mem[21] = 2'h3;
    mem[22] = 2'h3;
    mem[23] = 2'h3;
    mem[24] = 2'h3;
    mem[25] = 2'h3;
    mem[26] = 2'h3;
    mem[27] = 2'h3;
    mem[28] = 2'h3;
    mem[29] = 2'h3;
    mem[30] = 2'h3;
    mem[31] = 2'h3;
    mem[32] = 2'h3;
    mem[33] = 2'h3;
    mem[34] = 2'h3;
    mem[35] = 2'h3;
    mem[36] = 2'h3;
    mem[37] = 2'h3;
    mem[38] = 2'h3;
    mem[39] = 2'h3;
    mem[40] = 2'h3;
    mem[41] = 2'h3;
    mem[42] = 2'h3;
    mem[43] = 2'h3;
    mem[44] = 2'h3;
    mem[45] = 2'h3;
    mem[46] = 2'h3;
    mem[47] = 2'h3;
    mem[48] = 2'h3;
    mem[49] = 2'h3;
    mem[50] = 2'h3;
    mem[51] = 2'h3;
    mem[52] = 2'h3;
    mem[53] = 2'h3;
    mem[54] = 2'h3;
    mem[55] = 2'h3;
    mem[56] = 2'h3;
    mem[57] = 2'h3;
    mem[58] = 2'h3;
    mem[59] = 2'h3;
    mem[60] = 2'h3;
    mem[61] = 2'h3;
    mem[62] = 2'h3;
    mem[63] = 2'h3;
  end
  always @(posedge clk) begin
    if (\mem_w_en$20 ) mem[\mem_w_addr$21 ] <= \mem_w_data$22 ;
    if (\mem_w_en$17 ) mem[\mem_w_addr$18 ] <= \mem_w_data$19 ;
    if (\mem_w_en$14 ) mem[\mem_w_addr$15 ] <= \mem_w_data$16 ;
    if (\mem_w_en$11 ) mem[\mem_w_addr$12 ] <= \mem_w_data$13 ;
    if (\mem_w_en$8 ) mem[\mem_w_addr$9 ] <= \mem_w_data$10 ;
    if (\mem_w_en$5 ) mem[\mem_w_addr$6 ] <= \mem_w_data$7 ;
    if (\mem_w_en$2 ) mem[\mem_w_addr$3 ] <= \mem_w_data$4 ;
    if (mem_w_en) mem[mem_w_addr] <= mem_w_data;
  end
  assign \mem_r_data$24  = mem[\mem_r_addr$23 ];
  assign mem_r_data = mem[mem_r_addr];
  assign \mem_r_data$26  = mem[\mem_r_addr$25 ];
  assign \mem_r_data$32  = mem[\mem_r_addr$31 ];
  assign \mem_r_data$28  = mem[\mem_r_addr$27 ];
  assign \mem_r_data$30  = mem[\mem_r_addr$29 ];
  always @* begin
    mem_w_en = 1'h0;
    mem_w_en = write_en0;
  end
  always @* begin
    mem_w_addr = 6'h00;
    mem_w_addr = write_addr0;
  end
  always @* begin
    \mem_w_addr$9  = 6'h00;
    \mem_w_addr$9  = write_addr3;
  end
  always @* begin
    \mem_w_data$10  = 2'h0;
    \mem_w_data$10  = write_data3;
  end
  always @* begin
    \mem_w_en$11  = 1'h0;
    \mem_w_en$11  = write_en4;
  end
  always @* begin
    \mem_w_addr$12  = 6'h00;
    \mem_w_addr$12  = write_addr4;
  end
  always @* begin
    \mem_w_data$13  = 2'h0;
    \mem_w_data$13  = write_data4;
  end
  always @* begin
    \mem_w_en$14  = 1'h0;
    \mem_w_en$14  = write_en5;
  end
  always @* begin
    \mem_w_addr$15  = 6'h00;
    \mem_w_addr$15  = write_addr5;
  end
  always @* begin
    \mem_w_data$16  = 2'h0;
    \mem_w_data$16  = write_data5;
  end
  always @* begin
    \mem_w_en$17  = 1'h0;
    \mem_w_en$17  = write_en6;
  end
  always @* begin
    \mem_w_addr$18  = 6'h00;
    \mem_w_addr$18  = write_addr6;
  end
  always @* begin
    mem_w_data = 2'h0;
    mem_w_data = write_data0;
  end
  always @* begin
    \mem_w_data$19  = 2'h0;
    \mem_w_data$19  = write_data6;
  end
  always @* begin
    \mem_w_en$20  = 1'h0;
    \mem_w_en$20  = write_en7;
  end
  always @* begin
    \mem_w_addr$21  = 6'h00;
    \mem_w_addr$21  = write_addr7;
  end
  always @* begin
    \mem_w_data$22  = 2'h0;
    \mem_w_data$22  = write_data7;
  end
  always @* begin
    mem_r_addr = 6'h00;
    mem_r_addr = read_addr0;
  end
  always @* begin
    read_data0 = 2'h0;
    read_data0 = mem_r_data;
  end
  always @* begin
    \mem_r_addr$23  = 6'h00;
    \mem_r_addr$23  = read_addr1;
  end
  always @* begin
    read_data1 = 2'h0;
    read_data1 = \mem_r_data$24 ;
  end
  always @* begin
    \mem_r_addr$25  = 6'h00;
    \mem_r_addr$25  = read_addr2;
  end
  always @* begin
    read_data2 = 2'h0;
    read_data2 = \mem_r_data$26 ;
  end
  always @* begin
    \mem_w_en$2  = 1'h0;
    \mem_w_en$2  = write_en1;
  end
  always @* begin
    \mem_r_addr$27  = 6'h00;
    \mem_r_addr$27  = read_addr3;
  end
  always @* begin
    read_data3 = 2'h0;
    read_data3 = \mem_r_data$28 ;
  end
  always @* begin
    \mem_r_addr$29  = 6'h00;
    \mem_r_addr$29  = read_addr4;
  end
  always @* begin
    read_data4 = 2'h0;
    read_data4 = \mem_r_data$30 ;
  end
  always @* begin
    \mem_r_addr$31  = 6'h00;
    \mem_r_addr$31  = read_addr5;
  end
  always @* begin
    read_data5 = 2'h0;
    read_data5 = \mem_r_data$32 ;
  end
  always @* begin
    \mem_w_addr$3  = 6'h00;
    \mem_w_addr$3  = write_addr1;
  end
  always @* begin
    \mem_w_data$4  = 2'h0;
    \mem_w_data$4  = write_data1;
  end
  always @* begin
    \mem_w_en$5  = 1'h0;
    \mem_w_en$5  = write_en2;
  end
  always @* begin
    \mem_w_addr$6  = 6'h00;
    \mem_w_addr$6  = write_addr2;
  end
  always @* begin
    \mem_w_data$7  = 2'h0;
    \mem_w_data$7  = write_data2;
  end
  always @* begin
    \mem_w_en$8  = 1'h0;
    \mem_w_en$8  = write_en3;
  end
endmodule

(* generator = "nMigen" *)
(* top =  1  *)
(* \nmigen.hierarchy  = "top" *)
module top(rst, clk);
  (* src = "/home/phire/hdl/cube/scheduler.py:114" *)
  wire \$1 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:257" *)
  wire [2:0] \$100 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:270" *)
  wire [1:0] \$102 ;
  (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/back/rtlil.py:573" *)
  wire [4:0] \$103 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:244" *)
  wire \$106 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:245" *)
  wire \$108 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:122" *)
  wire \$11 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:246" *)
  wire \$110 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:246" *)
  wire \$113 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:253" *)
  wire [1:0] \$115 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:254" *)
  wire \$117 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:257" *)
  wire [2:0] \$119 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:270" *)
  wire [1:0] \$121 ;
  (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/back/rtlil.py:573" *)
  wire [4:0] \$122 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:208" *)
  wire \$125 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:222" *)
  wire \$127 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:238" *)
  wire \$129 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:114" *)
  wire \$13 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:238" *)
  wire \$131 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:239" *)
  wire \$133 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:239" *)
  wire \$135 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:240" *)
  wire \$137 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:240" *)
  wire \$139 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:240" *)
  wire \$142 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:253" *)
  wire [1:0] \$144 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:254" *)
  wire \$146 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:257" *)
  wire [2:0] \$148 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:115" *)
  wire \$15 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:270" *)
  wire [1:0] \$150 ;
  (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/back/rtlil.py:573" *)
  wire [4:0] \$151 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:244" *)
  wire \$154 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:245" *)
  wire \$156 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:246" *)
  wire \$158 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:246" *)
  wire \$161 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:253" *)
  wire [1:0] \$163 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:254" *)
  wire \$165 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:257" *)
  wire [2:0] \$167 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:270" *)
  wire [1:0] \$169 ;
  (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/back/rtlil.py:573" *)
  wire [4:0] \$170 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:293" *)
  wire \$173 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:311" *)
  wire \$175 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [6:0] \$177 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:320" *)
  wire [6:0] \$179 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:118" *)
  wire \$18 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:320" *)
  wire \$181 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:320" *)
  wire [6:0] \$183 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:320" *)
  wire \$185 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:293" *)
  wire \$190 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:311" *)
  wire \$192 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [6:0] \$195 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:320" *)
  wire [6:0] \$197 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:320" *)
  wire \$199 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:118" *)
  wire \$20 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:320" *)
  wire [6:0] \$201 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:320" *)
  wire \$203 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:122" *)
  wire \$22 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:114" *)
  wire \$24 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:115" *)
  wire \$26 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:118" *)
  wire \$29 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:115" *)
  wire \$3 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:118" *)
  wire \$31 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:122" *)
  wire \$33 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:166" *)
  wire \$35 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:166" *)
  wire \$37 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:122" *)
  wire \$39 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:122" *)
  wire \$41 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:157" *)
  wire \$43 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:158" *)
  wire \$45 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:159" *)
  wire \$47 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:163" *)
  wire [3:0] \$49 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:118" *)
  wire \$5 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:163" *)
  wire [1:0] \$50 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:166" *)
  wire \$53 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:157" *)
  wire \$55 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:158" *)
  wire \$57 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:159" *)
  wire \$59 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:163" *)
  wire [3:0] \$62 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:163" *)
  wire [1:0] \$63 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:166" *)
  wire \$66 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:134" *)
  wire \$68 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:118" *)
  wire \$7 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:137" *)
  wire \$71 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:134" *)
  wire \$73 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:137" *)
  wire \$76 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:208" *)
  wire \$78 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:222" *)
  wire \$80 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:238" *)
  wire \$82 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:238" *)
  wire \$84 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:239" *)
  wire \$86 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:239" *)
  wire \$88 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:122" *)
  wire \$9 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:240" *)
  wire \$90 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:240" *)
  wire \$92 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:240" *)
  wire \$94 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:253" *)
  wire [1:0] \$96 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:254" *)
  wire \$98 ;
  (* init = 1'h0 *)
  reg \$verilog_initial_trigger  = 1'h0;
  (* src = "/home/phire/hdl/cube/scheduler.py:233" *)
  reg AlreadyReady;
  (* src = "/home/phire/hdl/cube/scheduler.py:233" *)
  reg \AlreadyReady$111 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:233" *)
  reg \AlreadyReady$140 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:233" *)
  reg \AlreadyReady$159 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] MappingTableCptr_read_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] MappingTableCptr_read_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [5:0] MappingTableCptr_read_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [5:0] MappingTableCptr_read_data1;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableCptr_write_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableCptr_write_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableCptr_write_addr2;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableCptr_write_addr3;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [5:0] MappingTableCptr_write_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [5:0] MappingTableCptr_write_data1;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [5:0] MappingTableCptr_write_data2;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [5:0] MappingTableCptr_write_data3;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableCptr_write_en0;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableCptr_write_en1;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableCptr_write_en2;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableCptr_write_en3;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] MappingTableStatus_read_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] MappingTableStatus_read_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] MappingTableStatus_read_addr2;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] MappingTableStatus_read_addr3;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] MappingTableStatus_read_addr4;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] MappingTableStatus_read_addr5;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [1:0] MappingTableStatus_read_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [1:0] MappingTableStatus_read_data1;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [1:0] MappingTableStatus_read_data2;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [1:0] MappingTableStatus_read_data3;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [1:0] MappingTableStatus_read_data4;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [1:0] MappingTableStatus_read_data5;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableStatus_write_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableStatus_write_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableStatus_write_addr2;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableStatus_write_addr3;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableStatus_write_addr4;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableStatus_write_addr5;
  (* init = 6'h00 *)
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableStatus_write_addr6 = 6'h00;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] \MappingTableStatus_write_addr6$next ;
  (* init = 6'h00 *)
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] MappingTableStatus_write_addr7 = 6'h00;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] \MappingTableStatus_write_addr7$next ;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] MappingTableStatus_write_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] MappingTableStatus_write_data1;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] MappingTableStatus_write_data2;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] MappingTableStatus_write_data3;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] MappingTableStatus_write_data4;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] MappingTableStatus_write_data5;
  (* init = 2'h0 *)
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] MappingTableStatus_write_data6 = 2'h0;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] \MappingTableStatus_write_data6$next ;
  (* init = 2'h0 *)
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] MappingTableStatus_write_data7 = 2'h0;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [1:0] \MappingTableStatus_write_data7$next ;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableStatus_write_en0;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableStatus_write_en1;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableStatus_write_en2;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableStatus_write_en3;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableStatus_write_en4;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableStatus_write_en5;
  (* init = 1'h0 *)
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableStatus_write_en6 = 1'h0;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg \MappingTableStatus_write_en6$next ;
  (* init = 1'h0 *)
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg MappingTableStatus_write_en7 = 1'h0;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg \MappingTableStatus_write_en7$next ;
  (* src = "/home/phire/hdl/cube/scheduler.py:110" *)
  reg accumulated;
  (* src = "/home/phire/hdl/cube/scheduler.py:110" *)
  reg \accumulated$17 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:110" *)
  reg \accumulated$28 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:130" *)
  reg \accumulated$70 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:130" *)
  reg \accumulated$75 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:173" *)
  reg allow_status_create_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:173" *)
  reg allow_status_create_1;
  (* src = "/home/phire/hdl/cube/scheduler.py:182" *)
  reg allow_status_update_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:182" *)
  reg allow_status_update_1;
  (* src = "/home/phire/hdl/cube/scheduler.py:182" *)
  reg allow_status_update_2;
  (* src = "/home/phire/hdl/cube/scheduler.py:182" *)
  reg allow_status_update_3;
  (* src = "/home/phire/hdl/cube/scheduler.py:280" *)
  reg [6:0] argA;
  (* src = "/home/phire/hdl/cube/scheduler.py:280" *)
  reg [6:0] \argA$188 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:281" *)
  reg [6:0] argB;
  (* src = "/home/phire/hdl/cube/scheduler.py:281" *)
  reg [6:0] \argB$189 ;
  (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/home/phire/hdl/cube/scheduler.py:179" *)
  reg [1:0] depend_conflict_offset_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:179" *)
  reg [1:0] depend_conflict_offset_1;
  (* src = "/home/phire/hdl/cube/scheduler.py:179" *)
  reg [1:0] depend_conflict_offset_2;
  (* src = "/home/phire/hdl/cube/scheduler.py:179" *)
  reg [1:0] depend_conflict_offset_3;
  (* src = "/home/phire/hdl/cube/scheduler.py:185" *)
  reg ignore_old_status_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:185" *)
  reg ignore_old_status_1;
  (* src = "/home/phire/hdl/cube/scheduler.py:185" *)
  reg ignore_old_status_2;
  (* src = "/home/phire/hdl/cube/scheduler.py:185" *)
  reg ignore_old_status_3;
  (* src = "/home/phire/hdl/cube/scheduler.py:22" *)
  wire [6:0] inA_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:22" *)
  wire [6:0] inA_1;
  (* src = "/home/phire/hdl/cube/scheduler.py:23" *)
  wire [6:0] inB_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:23" *)
  wire [6:0] inB_1;
  (* src = "/home/phire/hdl/cube/scheduler.py:24" *)
  wire [6:0] inOut_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:24" *)
  wire [6:0] inOut_1;
  (* src = "/home/phire/hdl/cube/scheduler.py:25" *)
  wire inValid_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:25" *)
  wire inValid_1;
  (* src = "/home/phire/hdl/cube/scheduler.py:303" *)
  reg [6:0] nextCptr;
  (* src = "/home/phire/hdl/cube/scheduler.py:303" *)
  reg [6:0] \nextCptr$194 ;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] read_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:25" *)
  reg [5:0] read_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [13:0] read_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:26" *)
  wire [13:0] read_data1;
  (* init = 7'h00 *)
  (* src = "/home/phire/hdl/cube/scheduler.py:76" *)
  reg [6:0] ready0 = 7'h00;
  (* init = 7'h00 *)
  (* src = "/home/phire/hdl/cube/scheduler.py:84" *)
  reg [6:0] \ready0$187  = 7'h00;
  (* src = "/home/phire/hdl/cube/scheduler.py:84" *)
  reg [6:0] \ready0$187$next ;
  (* src = "/home/phire/hdl/cube/scheduler.py:76" *)
  reg [6:0] \ready0$next ;
  (* init = 1'h0 *)
  (* src = "/home/phire/hdl/cube/scheduler.py:85" *)
  reg ready0_valid = 1'h0;
  (* src = "/home/phire/hdl/cube/scheduler.py:85" *)
  reg \ready0_valid$next ;
  (* init = 7'h00 *)
  (* src = "/home/phire/hdl/cube/scheduler.py:76" *)
  reg [6:0] ready1 = 7'h00;
  (* init = 7'h00 *)
  (* src = "/home/phire/hdl/cube/scheduler.py:84" *)
  reg [6:0] \ready1$205  = 7'h00;
  (* src = "/home/phire/hdl/cube/scheduler.py:84" *)
  reg [6:0] \ready1$205$next ;
  (* src = "/home/phire/hdl/cube/scheduler.py:76" *)
  reg [6:0] \ready1$next ;
  (* init = 1'h0 *)
  (* src = "/home/phire/hdl/cube/scheduler.py:85" *)
  reg ready1_valid = 1'h0;
  (* src = "/home/phire/hdl/cube/scheduler.py:85" *)
  reg \ready1_valid$next ;
  (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "/home/phire/hdl/cube/scheduler.py:162" *)
  reg [3:0] sum;
  (* src = "/home/phire/hdl/cube/scheduler.py:162" *)
  reg [3:0] \sum$61 ;
  (* src = "/home/phire/hdl/cube/scheduler.py:228" *)
  reg [2:0] uop0_A_offset_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:227" *)
  reg [1:0] uop0_A_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:230" *)
  reg uop0_A_write_cptr;
  (* src = "/home/phire/hdl/cube/scheduler.py:231" *)
  reg uop0_A_write_mptr;
  (* src = "/home/phire/hdl/cube/scheduler.py:232" *)
  reg uop0_A_write_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:219" *)
  reg uop0_ArgsNotEqual;
  (* src = "/home/phire/hdl/cube/scheduler.py:228" *)
  reg [2:0] uop0_B_offset_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:227" *)
  reg [1:0] uop0_B_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:230" *)
  reg uop0_B_write_cptr;
  (* src = "/home/phire/hdl/cube/scheduler.py:231" *)
  reg uop0_B_write_mptr;
  (* src = "/home/phire/hdl/cube/scheduler.py:232" *)
  reg uop0_B_write_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:107" *)
  reg uop0_argA_update_conflicted_by_1A;
  (* src = "/home/phire/hdl/cube/scheduler.py:108" *)
  reg uop0_argA_update_conflicted_by_1B;
  (* src = "/home/phire/hdl/cube/scheduler.py:107" *)
  reg uop0_argB_update_conflicted_by_1A;
  (* src = "/home/phire/hdl/cube/scheduler.py:108" *)
  reg uop0_argB_update_conflicted_by_1B;
  (* src = "/home/phire/hdl/cube/scheduler.py:107" *)
  reg uop0_create_conflicted_by_1A;
  (* src = "/home/phire/hdl/cube/scheduler.py:108" *)
  reg uop0_create_conflicted_by_1B;
  (* src = "/home/phire/hdl/cube/scheduler.py:228" *)
  reg [2:0] uop1_A_offset_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:227" *)
  reg [1:0] uop1_A_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:230" *)
  reg uop1_A_write_cptr;
  (* src = "/home/phire/hdl/cube/scheduler.py:231" *)
  reg uop1_A_write_mptr;
  (* src = "/home/phire/hdl/cube/scheduler.py:232" *)
  reg uop1_A_write_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:219" *)
  reg uop1_ArgsNotEqual;
  (* src = "/home/phire/hdl/cube/scheduler.py:228" *)
  reg [2:0] uop1_B_offset_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:227" *)
  reg [1:0] uop1_B_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:230" *)
  reg uop1_B_write_cptr;
  (* src = "/home/phire/hdl/cube/scheduler.py:231" *)
  reg uop1_B_write_mptr;
  (* src = "/home/phire/hdl/cube/scheduler.py:232" *)
  reg uop1_B_write_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:128" *)
  reg uop1_argA_conflicts_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:154" *)
  reg uop1_argA_update_conflicted_by_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:152" *)
  reg uop1_argA_update_conflicted_by_0A;
  (* src = "/home/phire/hdl/cube/scheduler.py:153" *)
  reg uop1_argA_update_conflicted_by_0B;
  (* src = "/home/phire/hdl/cube/scheduler.py:128" *)
  reg uop1_argB_conflicts_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:154" *)
  reg uop1_argB_update_conflicted_by_0;
  (* src = "/home/phire/hdl/cube/scheduler.py:152" *)
  reg uop1_argB_update_conflicted_by_0A;
  (* src = "/home/phire/hdl/cube/scheduler.py:153" *)
  reg uop1_argB_update_conflicted_by_0B;
  (* src = "/home/phire/hdl/cube/scheduler.py:289" *)
  reg [6:0] wakeup0_other_arg;
  (* src = "/home/phire/hdl/cube/scheduler.py:301" *)
  reg wakeup0_other_arg_ready;
  (* src = "/home/phire/hdl/cube/scheduler.py:300" *)
  reg [1:0] wakeup0_other_arg_status;
  (* src = "/home/phire/hdl/cube/scheduler.py:289" *)
  reg [6:0] wakeup1_other_arg;
  (* src = "/home/phire/hdl/cube/scheduler.py:301" *)
  reg wakeup1_other_arg_ready;
  (* src = "/home/phire/hdl/cube/scheduler.py:300" *)
  reg [1:0] wakeup1_other_arg_status;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] write_addr0;
  (* src = "/home/phire/hdl/cube/multiMem.py:29" *)
  reg [5:0] write_addr1;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [13:0] write_data0;
  (* src = "/home/phire/hdl/cube/multiMem.py:31" *)
  reg [13:0] write_data1;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg write_en0;
  (* src = "/home/phire/hdl/cube/multiMem.py:30" *)
  reg write_en1;
  assign \$9  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:122" *) accumulated;
  assign \$100  = uop0_A_status + (* src = "/home/phire/hdl/cube/scheduler.py:257" *) depend_conflict_offset_0;
  assign \$103  = uop0_A_offset_status * (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/back/rtlil.py:573" *) 2'h2;
  assign \$102  = 10'h2a9 >> \$103 ;
  assign \$106  = uop0_B_offset_status == (* src = "/home/phire/hdl/cube/scheduler.py:244" *) 1'h0;
  assign \$108  = uop0_B_offset_status == (* src = "/home/phire/hdl/cube/scheduler.py:245" *) 1'h1;
  assign \$110  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:246" *) \AlreadyReady$111 ;
  assign \$113  = allow_status_update_1 & (* src = "/home/phire/hdl/cube/scheduler.py:246" *) \$110 ;
  assign \$115  = ignore_old_status_1 ? (* src = "/home/phire/hdl/cube/scheduler.py:253" *) 2'h0 : MappingTableStatus_read_data1;
  assign \$117  = uop0_B_status == (* src = "/home/phire/hdl/cube/scheduler.py:254" *) 2'h3;
  assign \$11  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:122" *) 1'h0;
  assign \$119  = uop0_B_status + (* src = "/home/phire/hdl/cube/scheduler.py:257" *) depend_conflict_offset_1;
  assign \$122  = uop0_B_offset_status * (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/back/rtlil.py:573" *) 2'h2;
  assign \$121  = 10'h2a9 >> \$122 ;
  assign \$125  = allow_status_create_1 & (* src = "/home/phire/hdl/cube/scheduler.py:208" *) inValid_1;
  assign \$127  = inA_1 != (* src = "/home/phire/hdl/cube/scheduler.py:222" *) inB_1;
  assign \$129  = uop1_A_offset_status == (* src = "/home/phire/hdl/cube/scheduler.py:238" *) 1'h0;
  assign \$131  = \$129  & (* src = "/home/phire/hdl/cube/scheduler.py:238" *) uop1_ArgsNotEqual;
  assign \$133  = uop1_A_offset_status == (* src = "/home/phire/hdl/cube/scheduler.py:239" *) 1'h1;
  assign \$135  = \$133  & (* src = "/home/phire/hdl/cube/scheduler.py:239" *) uop1_ArgsNotEqual;
  assign \$137  = allow_status_update_2 & (* src = "/home/phire/hdl/cube/scheduler.py:240" *) uop1_ArgsNotEqual;
  assign \$13  = inA_0 == (* src = "/home/phire/hdl/cube/scheduler.py:114" *) inA_1;
  assign \$139  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:240" *) \AlreadyReady$140 ;
  assign \$142  = \$137  & (* src = "/home/phire/hdl/cube/scheduler.py:240" *) \$139 ;
  assign \$144  = ignore_old_status_2 ? (* src = "/home/phire/hdl/cube/scheduler.py:253" *) 2'h0 : MappingTableStatus_read_data2;
  assign \$146  = uop1_A_status == (* src = "/home/phire/hdl/cube/scheduler.py:254" *) 2'h3;
  assign \$148  = uop1_A_status + (* src = "/home/phire/hdl/cube/scheduler.py:257" *) depend_conflict_offset_2;
  assign \$151  = uop1_A_offset_status * (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/back/rtlil.py:573" *) 2'h2;
  assign \$150  = 10'h2a9 >> \$151 ;
  assign \$154  = uop1_B_offset_status == (* src = "/home/phire/hdl/cube/scheduler.py:244" *) 1'h0;
  assign \$156  = uop1_B_offset_status == (* src = "/home/phire/hdl/cube/scheduler.py:245" *) 1'h1;
  assign \$15  = inA_0 == (* src = "/home/phire/hdl/cube/scheduler.py:115" *) inB_1;
  assign \$158  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:246" *) \AlreadyReady$159 ;
  assign \$161  = allow_status_update_3 & (* src = "/home/phire/hdl/cube/scheduler.py:246" *) \$158 ;
  assign \$163  = ignore_old_status_3 ? (* src = "/home/phire/hdl/cube/scheduler.py:253" *) 2'h0 : MappingTableStatus_read_data3;
  assign \$165  = uop1_B_status == (* src = "/home/phire/hdl/cube/scheduler.py:254" *) 2'h3;
  assign \$167  = uop1_B_status + (* src = "/home/phire/hdl/cube/scheduler.py:257" *) depend_conflict_offset_3;
  assign \$170  = uop1_B_offset_status * (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/back/rtlil.py:573" *) 2'h2;
  assign \$169  = 10'h2a9 >> \$170 ;
  assign \$173  = argA == (* src = "/home/phire/hdl/cube/scheduler.py:293" *) ready0;
  assign \$175  = wakeup0_other_arg_status == (* src = "/home/phire/hdl/cube/scheduler.py:311" *) 2'h3;
  assign \$177  = + (* src = "/home/phire/hdl/cube/multiMem.py:26" *) MappingTableCptr_read_data0;
  assign \$179  = wakeup0_other_arg_ready | (* src = "/home/phire/hdl/cube/scheduler.py:320" *) wakeup0_other_arg;
  assign \$181  = \$179  == (* src = "/home/phire/hdl/cube/scheduler.py:320" *) 1'h0;
  assign \$183  = \$181  & (* src = "/home/phire/hdl/cube/scheduler.py:320" *) ready0;
  assign \$185  = \$183  != (* src = "/home/phire/hdl/cube/scheduler.py:320" *) 1'h0;
  assign \$18  = 1'h0 | (* src = "/home/phire/hdl/cube/scheduler.py:118" *) uop0_argA_update_conflicted_by_1A;
  assign \$190  = \argA$188  == (* src = "/home/phire/hdl/cube/scheduler.py:293" *) ready1;
  assign \$192  = wakeup1_other_arg_status == (* src = "/home/phire/hdl/cube/scheduler.py:311" *) 2'h3;
  assign \$195  = + (* src = "/home/phire/hdl/cube/multiMem.py:26" *) MappingTableCptr_read_data1;
  assign \$197  = wakeup1_other_arg_ready | (* src = "/home/phire/hdl/cube/scheduler.py:320" *) wakeup1_other_arg;
  assign \$1  = inOut_0 == (* src = "/home/phire/hdl/cube/scheduler.py:114" *) inA_1;
  assign \$199  = \$197  == (* src = "/home/phire/hdl/cube/scheduler.py:320" *) 1'h0;
  assign \$201  = \$199  & (* src = "/home/phire/hdl/cube/scheduler.py:320" *) ready1;
  assign \$203  = \$201  != (* src = "/home/phire/hdl/cube/scheduler.py:320" *) 1'h0;
  assign \$20  = \$18  | (* src = "/home/phire/hdl/cube/scheduler.py:118" *) uop0_argA_update_conflicted_by_1B;
  assign \$22  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:122" *) \accumulated$17 ;
  assign \$24  = inB_0 == (* src = "/home/phire/hdl/cube/scheduler.py:114" *) inA_1;
  assign \$26  = inB_0 == (* src = "/home/phire/hdl/cube/scheduler.py:115" *) inB_1;
  assign \$29  = 1'h0 | (* src = "/home/phire/hdl/cube/scheduler.py:118" *) uop0_argB_update_conflicted_by_1A;
  assign \$31  = \$29  | (* src = "/home/phire/hdl/cube/scheduler.py:118" *) uop0_argB_update_conflicted_by_1B;
  assign \$33  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:122" *) \accumulated$28 ;
  assign \$35  = 1'h0 > (* src = "/home/phire/hdl/cube/scheduler.py:166" *) 2'h2;
  assign \$37  = 1'h0 > (* src = "/home/phire/hdl/cube/scheduler.py:166" *) 2'h2;
  assign \$3  = inOut_0 == (* src = "/home/phire/hdl/cube/scheduler.py:115" *) inB_1;
  assign \$39  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:122" *) 1'h0;
  assign \$41  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:122" *) 1'h0;
  assign \$43  = inA_1 == (* src = "/home/phire/hdl/cube/scheduler.py:157" *) inA_0;
  assign \$45  = inA_1 == (* src = "/home/phire/hdl/cube/scheduler.py:158" *) inB_0;
  assign \$47  = uop1_argA_update_conflicted_by_0A | (* src = "/home/phire/hdl/cube/scheduler.py:159" *) uop1_argA_update_conflicted_by_0B;
  assign \$50  = 1'h0 + (* src = "/home/phire/hdl/cube/scheduler.py:163" *) uop1_argA_update_conflicted_by_0;
  assign \$49  = + (* src = "/home/phire/hdl/cube/scheduler.py:163" *) \$50 ;
  assign \$53  = sum > (* src = "/home/phire/hdl/cube/scheduler.py:166" *) 2'h2;
  assign \$55  = inB_1 == (* src = "/home/phire/hdl/cube/scheduler.py:157" *) inA_0;
  assign \$57  = inB_1 == (* src = "/home/phire/hdl/cube/scheduler.py:158" *) inB_0;
  assign \$5  = 1'h0 | (* src = "/home/phire/hdl/cube/scheduler.py:118" *) uop0_create_conflicted_by_1A;
  assign \$59  = uop1_argB_update_conflicted_by_0A | (* src = "/home/phire/hdl/cube/scheduler.py:159" *) uop1_argB_update_conflicted_by_0B;
  assign \$63  = 1'h0 + (* src = "/home/phire/hdl/cube/scheduler.py:163" *) uop1_argB_update_conflicted_by_0;
  assign \$62  = + (* src = "/home/phire/hdl/cube/scheduler.py:163" *) \$63 ;
  assign \$66  = \sum$61  > (* src = "/home/phire/hdl/cube/scheduler.py:166" *) 2'h2;
  assign \$68  = inA_1 == (* src = "/home/phire/hdl/cube/scheduler.py:134" *) inOut_0;
  assign \$71  = 1'h0 | (* src = "/home/phire/hdl/cube/scheduler.py:137" *) uop1_argA_conflicts_0;
  assign \$73  = inB_1 == (* src = "/home/phire/hdl/cube/scheduler.py:134" *) inOut_0;
  assign \$76  = 1'h0 | (* src = "/home/phire/hdl/cube/scheduler.py:137" *) uop1_argB_conflicts_0;
  assign \$78  = allow_status_create_0 & (* src = "/home/phire/hdl/cube/scheduler.py:208" *) inValid_0;
  assign \$7  = \$5  | (* src = "/home/phire/hdl/cube/scheduler.py:118" *) uop0_create_conflicted_by_1B;
  assign \$80  = inA_0 != (* src = "/home/phire/hdl/cube/scheduler.py:222" *) inB_0;
  assign \$82  = uop0_A_offset_status == (* src = "/home/phire/hdl/cube/scheduler.py:238" *) 1'h0;
  assign \$84  = \$82  & (* src = "/home/phire/hdl/cube/scheduler.py:238" *) uop0_ArgsNotEqual;
  assign \$86  = uop0_A_offset_status == (* src = "/home/phire/hdl/cube/scheduler.py:239" *) 1'h1;
  assign \$88  = \$86  & (* src = "/home/phire/hdl/cube/scheduler.py:239" *) uop0_ArgsNotEqual;
  assign \$90  = allow_status_update_0 & (* src = "/home/phire/hdl/cube/scheduler.py:240" *) uop0_ArgsNotEqual;
  assign \$92  = ~ (* src = "/home/phire/hdl/cube/scheduler.py:240" *) AlreadyReady;
  assign \$94  = \$90  & (* src = "/home/phire/hdl/cube/scheduler.py:240" *) \$92 ;
  assign \$96  = ignore_old_status_0 ? (* src = "/home/phire/hdl/cube/scheduler.py:253" *) 2'h0 : MappingTableStatus_read_data0;
  assign \$98  = uop0_A_status == (* src = "/home/phire/hdl/cube/scheduler.py:254" *) 2'h3;
  always @(posedge clk)
      ready1 <= \ready1$next ;
  always @(posedge clk)
      MappingTableStatus_write_en6 <= \MappingTableStatus_write_en6$next ;
  always @(posedge clk)
      \ready0$187  <= \ready0$187$next ;
  always @(posedge clk)
      ready0_valid <= \ready0_valid$next ;
  always @(posedge clk)
      MappingTableStatus_write_data7 <= \MappingTableStatus_write_data7$next ;
  always @(posedge clk)
      MappingTableStatus_write_addr7 <= \MappingTableStatus_write_addr7$next ;
  always @(posedge clk)
      MappingTableStatus_write_en7 <= \MappingTableStatus_write_en7$next ;
  always @(posedge clk)
      \ready1$205  <= \ready1$205$next ;
  always @(posedge clk)
      ready1_valid <= \ready1_valid$next ;
  always @(posedge clk)
      ready0 <= \ready0$next ;
  always @(posedge clk)
      MappingTableStatus_write_data6 <= \MappingTableStatus_write_data6$next ;
  always @(posedge clk)
      MappingTableStatus_write_addr6 <= \MappingTableStatus_write_addr6$next ;
  MappingTableCptr MappingTableCptr (
    .clk(clk),
    .read_addr0(MappingTableCptr_read_addr0),
    .read_addr1(MappingTableCptr_read_addr1),
    .read_data0(MappingTableCptr_read_data0),
    .read_data1(MappingTableCptr_read_data1),
    .write_addr0(MappingTableCptr_write_addr0),
    .write_addr1(MappingTableCptr_write_addr1),
    .write_addr2(MappingTableCptr_write_addr2),
    .write_addr3(MappingTableCptr_write_addr3),
    .write_data0(MappingTableCptr_write_data0),
    .write_data1(MappingTableCptr_write_data1),
    .write_data2(MappingTableCptr_write_data2),
    .write_data3(MappingTableCptr_write_data3),
    .write_en0(MappingTableCptr_write_en0),
    .write_en1(MappingTableCptr_write_en1),
    .write_en2(MappingTableCptr_write_en2),
    .write_en3(MappingTableCptr_write_en3)
  );
  MappingTableStatus MappingTableStatus (
    .clk(clk),
    .read_addr0(MappingTableStatus_read_addr0),
    .read_addr1(MappingTableStatus_read_addr1),
    .read_addr2(MappingTableStatus_read_addr2),
    .read_addr3(MappingTableStatus_read_addr3),
    .read_addr4(MappingTableStatus_read_addr4),
    .read_addr5(MappingTableStatus_read_addr5),
    .read_data0(MappingTableStatus_read_data0),
    .read_data1(MappingTableStatus_read_data1),
    .read_data2(MappingTableStatus_read_data2),
    .read_data3(MappingTableStatus_read_data3),
    .read_data4(MappingTableStatus_read_data4),
    .read_data5(MappingTableStatus_read_data5),
    .write_addr0(MappingTableStatus_write_addr0),
    .write_addr1(MappingTableStatus_write_addr1),
    .write_addr2(MappingTableStatus_write_addr2),
    .write_addr3(MappingTableStatus_write_addr3),
    .write_addr4(MappingTableStatus_write_addr4),
    .write_addr5(MappingTableStatus_write_addr5),
    .write_addr6(MappingTableStatus_write_addr6),
    .write_addr7(MappingTableStatus_write_addr7),
    .write_data0(MappingTableStatus_write_data0),
    .write_data1(MappingTableStatus_write_data1),
    .write_data2(MappingTableStatus_write_data2),
    .write_data3(MappingTableStatus_write_data3),
    .write_data4(MappingTableStatus_write_data4),
    .write_data5(MappingTableStatus_write_data5),
    .write_data6(MappingTableStatus_write_data6),
    .write_data7(MappingTableStatus_write_data7),
    .write_en0(MappingTableStatus_write_en0),
    .write_en1(MappingTableStatus_write_en1),
    .write_en2(MappingTableStatus_write_en2),
    .write_en3(MappingTableStatus_write_en3),
    .write_en4(MappingTableStatus_write_en4),
    .write_en5(MappingTableStatus_write_en5),
    .write_en6(MappingTableStatus_write_en6),
    .write_en7(MappingTableStatus_write_en7)
  );
  always @* begin
    uop0_create_conflicted_by_1A = 1'h0;
    uop0_create_conflicted_by_1A = \$1 ;
  end
  always @* begin
    uop0_create_conflicted_by_1B = 1'h0;
    uop0_create_conflicted_by_1B = \$3 ;
  end
  always @* begin
    uop0_argB_update_conflicted_by_1B = 1'h0;
    uop0_argB_update_conflicted_by_1B = \$26 ;
  end
  always @* begin
    MappingTableStatus_write_data5 = 2'h0;
    MappingTableStatus_write_data5 = \$169 ;
  end
  always @* begin
    read_addr0 = 6'h00;
    read_addr0 = ready0[5:0];
  end
  always @* begin
    argA = 7'h00;
    argB = 7'h00;
    { argB, argA } = read_data0;
  end
  always @* begin
    wakeup0_other_arg = 7'h00;
    (* src = "/home/phire/hdl/cube/scheduler.py:293" *)
    casez (\$173 )
      /* src = "/home/phire/hdl/cube/scheduler.py:293" */
      1'h1:
          wakeup0_other_arg = argB;
      /* src = "/home/phire/hdl/cube/scheduler.py:295" */
      default:
          wakeup0_other_arg = argA;
    endcase
  end
  always @* begin
    MappingTableStatus_read_addr4 = 6'h00;
    MappingTableStatus_read_addr4 = wakeup0_other_arg[5:0];
  end
  always @* begin
    wakeup0_other_arg_status = 2'h0;
    wakeup0_other_arg_status = MappingTableStatus_read_data4;
  end
  always @* begin
    wakeup0_other_arg_ready = 1'h0;
    wakeup0_other_arg_ready = \$175 ;
  end
  always @* begin
    MappingTableCptr_read_addr0 = 6'h00;
    MappingTableCptr_read_addr0 = ready0[5:0];
  end
  always @* begin
    nextCptr = 7'h00;
    nextCptr = \$177 ;
  end
  always @* begin
    \accumulated$28  = 1'h0;
    \accumulated$28  = \$31 ;
  end
  always @* begin
    \ready0_valid$next  = ready0_valid;
    \ready0_valid$next  = \$185 ;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \ready0_valid$next  = 1'h0;
    endcase
  end
  always @* begin
    \ready0$187$next  = \ready0$187 ;
    \ready0$187$next  = ready0;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \ready0$187$next  = 7'h00;
    endcase
  end
  always @* begin
    \MappingTableStatus_write_en6$next  = MappingTableStatus_write_en6;
    \MappingTableStatus_write_en6$next  = wakeup0_other_arg_ready;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \MappingTableStatus_write_en6$next  = 1'h0;
    endcase
  end
  always @* begin
    \MappingTableStatus_write_addr6$next  = MappingTableStatus_write_addr6;
    \MappingTableStatus_write_addr6$next  = ready0[5:0];
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \MappingTableStatus_write_addr6$next  = 6'h00;
    endcase
  end
  always @* begin
    \MappingTableStatus_write_data6$next  = MappingTableStatus_write_data6;
    \MappingTableStatus_write_data6$next  = 2'h3;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \MappingTableStatus_write_data6$next  = 2'h0;
    endcase
  end
  always @* begin
    \ready0$next  = ready0;
    \ready0$next  = nextCptr;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \ready0$next  = 7'h00;
    endcase
  end
  always @* begin
    read_addr1 = 6'h00;
    read_addr1 = ready1[5:0];
  end
  always @* begin
    \argA$188  = 7'h00;
    \argB$189  = 7'h00;
    { \argB$189 , \argA$188  } = read_data1;
  end
  always @* begin
    wakeup1_other_arg = 7'h00;
    (* src = "/home/phire/hdl/cube/scheduler.py:293" *)
    casez (\$190 )
      /* src = "/home/phire/hdl/cube/scheduler.py:293" */
      1'h1:
          wakeup1_other_arg = \argB$189 ;
      /* src = "/home/phire/hdl/cube/scheduler.py:295" */
      default:
          wakeup1_other_arg = \argA$188 ;
    endcase
  end
  always @* begin
    allow_status_update_1 = 1'h0;
    allow_status_update_1 = \$33 ;
  end
  always @* begin
    MappingTableStatus_read_addr5 = 6'h00;
    MappingTableStatus_read_addr5 = wakeup1_other_arg[5:0];
  end
  always @* begin
    wakeup1_other_arg_status = 2'h0;
    wakeup1_other_arg_status = MappingTableStatus_read_data5;
  end
  always @* begin
    wakeup1_other_arg_ready = 1'h0;
    wakeup1_other_arg_ready = \$192 ;
  end
  always @* begin
    MappingTableCptr_read_addr1 = 6'h00;
    MappingTableCptr_read_addr1 = ready1[5:0];
  end
  always @* begin
    \nextCptr$194  = 7'h00;
    \nextCptr$194  = \$195 ;
  end
  always @* begin
    \ready1_valid$next  = ready1_valid;
    \ready1_valid$next  = \$203 ;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \ready1_valid$next  = 1'h0;
    endcase
  end
  always @* begin
    \ready1$205$next  = \ready1$205 ;
    \ready1$205$next  = ready1;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \ready1$205$next  = 7'h00;
    endcase
  end
  always @* begin
    \MappingTableStatus_write_en7$next  = MappingTableStatus_write_en7;
    \MappingTableStatus_write_en7$next  = wakeup1_other_arg_ready;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \MappingTableStatus_write_en7$next  = 1'h0;
    endcase
  end
  always @* begin
    \MappingTableStatus_write_addr7$next  = MappingTableStatus_write_addr7;
    \MappingTableStatus_write_addr7$next  = ready1[5:0];
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \MappingTableStatus_write_addr7$next  = 6'h00;
    endcase
  end
  always @* begin
    \MappingTableStatus_write_data7$next  = MappingTableStatus_write_data7;
    \MappingTableStatus_write_data7$next  = 2'h3;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \MappingTableStatus_write_data7$next  = 2'h0;
    endcase
  end
  always @* begin
    depend_conflict_offset_0 = 2'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
    (* src = "/home/phire/hdl/cube/scheduler.py:166" *)
    casez (\$35 )
      /* src = "/home/phire/hdl/cube/scheduler.py:166" */
      1'h1:
          depend_conflict_offset_0 = 2'h2;
      /* src = "/home/phire/hdl/cube/scheduler.py:168" */
      default:
          depend_conflict_offset_0 = 2'h0;
    endcase
  end
  always @* begin
    \ready1$next  = ready1;
    \ready1$next  = \nextCptr$194 ;
    (* src = "/home/phire/.local/share/virtualenvs/cube-VYf0munx/lib/python3.9/site-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \ready1$next  = 7'h00;
    endcase
  end
  always @* begin
    depend_conflict_offset_1 = 2'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
    (* src = "/home/phire/hdl/cube/scheduler.py:166" *)
    casez (\$37 )
      /* src = "/home/phire/hdl/cube/scheduler.py:166" */
      1'h1:
          depend_conflict_offset_1 = 2'h2;
      /* src = "/home/phire/hdl/cube/scheduler.py:168" */
      default:
          depend_conflict_offset_1 = 2'h0;
    endcase
  end
  always @* begin
    ignore_old_status_0 = 1'h0;
    ignore_old_status_0 = 1'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    ignore_old_status_1 = 1'h0;
    ignore_old_status_1 = 1'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    allow_status_update_2 = 1'h0;
    allow_status_update_2 = \$39 ;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    allow_status_update_3 = 1'h0;
    allow_status_update_3 = \$41 ;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    uop1_argA_update_conflicted_by_0A = 1'h0;
    uop1_argA_update_conflicted_by_0A = \$43 ;
  end
  always @* begin
    accumulated = 1'h0;
    accumulated = \$7 ;
  end
  always @* begin
    uop1_argA_update_conflicted_by_0B = 1'h0;
    uop1_argA_update_conflicted_by_0B = \$45 ;
  end
  always @* begin
    uop1_argA_update_conflicted_by_0 = 1'h0;
    uop1_argA_update_conflicted_by_0 = \$47 ;
  end
  always @* begin
    sum = 4'h0;
    sum = \$49 ;
  end
  always @* begin
    depend_conflict_offset_2 = 2'h0;
    (* src = "/home/phire/hdl/cube/scheduler.py:166" *)
    casez (\$53 )
      /* src = "/home/phire/hdl/cube/scheduler.py:166" */
      1'h1:
          depend_conflict_offset_2 = 2'h2;
      /* src = "/home/phire/hdl/cube/scheduler.py:168" */
      default:
          depend_conflict_offset_2 = sum[1:0];
    endcase
  end
  always @* begin
    uop1_argB_update_conflicted_by_0A = 1'h0;
    uop1_argB_update_conflicted_by_0A = \$55 ;
  end
  always @* begin
    uop1_argB_update_conflicted_by_0B = 1'h0;
    uop1_argB_update_conflicted_by_0B = \$57 ;
  end
  always @* begin
    uop1_argB_update_conflicted_by_0 = 1'h0;
    uop1_argB_update_conflicted_by_0 = \$59 ;
  end
  always @* begin
    \sum$61  = 4'h0;
    \sum$61  = \$62 ;
  end
  always @* begin
    depend_conflict_offset_3 = 2'h0;
    (* src = "/home/phire/hdl/cube/scheduler.py:166" *)
    casez (\$66 )
      /* src = "/home/phire/hdl/cube/scheduler.py:166" */
      1'h1:
          depend_conflict_offset_3 = 2'h2;
      /* src = "/home/phire/hdl/cube/scheduler.py:168" */
      default:
          depend_conflict_offset_3 = \sum$61 [1:0];
    endcase
  end
  always @* begin
    uop1_argA_conflicts_0 = 1'h0;
    uop1_argA_conflicts_0 = \$68 ;
  end
  always @* begin
    allow_status_create_0 = 1'h0;
    allow_status_create_0 = \$9 ;
  end
  always @* begin
    \accumulated$70  = 1'h0;
    \accumulated$70  = \$71 ;
  end
  always @* begin
    ignore_old_status_2 = 1'h0;
    ignore_old_status_2 = \accumulated$70 ;
  end
  always @* begin
    uop1_argB_conflicts_0 = 1'h0;
    uop1_argB_conflicts_0 = \$73 ;
  end
  always @* begin
    \accumulated$75  = 1'h0;
    \accumulated$75  = \$76 ;
  end
  always @* begin
    ignore_old_status_3 = 1'h0;
    ignore_old_status_3 = \accumulated$75 ;
  end
  always @* begin
    MappingTableStatus_write_addr0 = 6'h00;
    MappingTableStatus_write_addr0 = inOut_0[5:0];
  end
  always @* begin
    MappingTableStatus_write_data0 = 2'h0;
    MappingTableStatus_write_data0 = 2'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    MappingTableStatus_write_en0 = 1'h0;
    MappingTableStatus_write_en0 = \$78 ;
  end
  always @* begin
    write_addr0 = 6'h00;
    write_addr0 = inOut_0[5:0];
  end
  always @* begin
    write_data0 = 14'h0000;
    write_data0 = { inB_0, inA_0 };
  end
  always @* begin
    allow_status_create_1 = 1'h0;
    allow_status_create_1 = \$11 ;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    write_en0 = 1'h0;
    write_en0 = inValid_0;
  end
  always @* begin
    uop0_ArgsNotEqual = 1'h0;
    uop0_ArgsNotEqual = \$80 ;
  end
  always @* begin
    uop0_A_write_cptr = 1'h0;
    uop0_A_write_cptr = \$84 ;
  end
  always @* begin
    uop0_A_write_mptr = 1'h0;
    uop0_A_write_mptr = \$88 ;
  end
  always @* begin
    uop0_A_write_status = 1'h0;
    uop0_A_write_status = \$94 ;
  end
  always @* begin
    MappingTableStatus_read_addr0 = 6'h00;
    MappingTableStatus_read_addr0 = inA_0[5:0];
  end
  always @* begin
    uop0_A_status = 2'h0;
    uop0_A_status = \$96 ;
  end
  always @* begin
    AlreadyReady = 1'h0;
    AlreadyReady = \$98 ;
  end
  always @* begin
    uop0_A_offset_status = 3'h0;
    uop0_A_offset_status = \$100 ;
  end
  always @* begin
    MappingTableCptr_write_en0 = 1'h0;
    MappingTableCptr_write_en0 = uop0_A_write_cptr;
  end
  always @* begin
    uop0_argA_update_conflicted_by_1A = 1'h0;
    uop0_argA_update_conflicted_by_1A = \$13 ;
  end
  always @* begin
    MappingTableCptr_write_addr0 = 6'h00;
    MappingTableCptr_write_addr0 = inA_0[5:0];
  end
  always @* begin
    MappingTableCptr_write_data0 = 6'h00;
    MappingTableCptr_write_data0 = inOut_0[5:0];
  end
  always @* begin
    MappingTableStatus_write_en1 = 1'h0;
    MappingTableStatus_write_en1 = uop0_A_write_status;
  end
  always @* begin
    MappingTableStatus_write_addr1 = 6'h00;
    MappingTableStatus_write_addr1 = inA_0[5:0];
  end
  always @* begin
    MappingTableStatus_write_data1 = 2'h0;
    MappingTableStatus_write_data1 = \$102 ;
  end
  always @* begin
    uop0_B_write_cptr = 1'h0;
    uop0_B_write_cptr = \$106 ;
  end
  always @* begin
    uop0_B_write_mptr = 1'h0;
    uop0_B_write_mptr = \$108 ;
  end
  always @* begin
    uop0_B_write_status = 1'h0;
    uop0_B_write_status = \$113 ;
  end
  always @* begin
    MappingTableStatus_read_addr1 = 6'h00;
    MappingTableStatus_read_addr1 = inB_0[5:0];
  end
  always @* begin
    uop0_B_status = 2'h0;
    uop0_B_status = \$115 ;
  end
  always @* begin
    uop0_argA_update_conflicted_by_1B = 1'h0;
    uop0_argA_update_conflicted_by_1B = \$15 ;
  end
  always @* begin
    \AlreadyReady$111  = 1'h0;
    \AlreadyReady$111  = \$117 ;
  end
  always @* begin
    uop0_B_offset_status = 3'h0;
    uop0_B_offset_status = \$119 ;
  end
  always @* begin
    MappingTableCptr_write_en1 = 1'h0;
    MappingTableCptr_write_en1 = uop0_B_write_cptr;
  end
  always @* begin
    MappingTableCptr_write_addr1 = 6'h00;
    MappingTableCptr_write_addr1 = inB_0[5:0];
  end
  always @* begin
    MappingTableCptr_write_data1 = 6'h00;
    MappingTableCptr_write_data1 = inOut_0[5:0];
  end
  always @* begin
    MappingTableStatus_write_en2 = 1'h0;
    MappingTableStatus_write_en2 = uop0_B_write_status;
  end
  always @* begin
    MappingTableStatus_write_addr2 = 6'h00;
    MappingTableStatus_write_addr2 = inB_0[5:0];
  end
  always @* begin
    MappingTableStatus_write_data2 = 2'h0;
    MappingTableStatus_write_data2 = \$121 ;
  end
  always @* begin
    MappingTableStatus_write_addr3 = 6'h00;
    MappingTableStatus_write_addr3 = inOut_1[5:0];
  end
  always @* begin
    MappingTableStatus_write_data3 = 2'h0;
    MappingTableStatus_write_data3 = 2'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \accumulated$17  = 1'h0;
    \accumulated$17  = \$20 ;
  end
  always @* begin
    MappingTableStatus_write_en3 = 1'h0;
    MappingTableStatus_write_en3 = \$125 ;
  end
  always @* begin
    write_addr1 = 6'h00;
    write_addr1 = inOut_1[5:0];
  end
  always @* begin
    write_data1 = 14'h0000;
    write_data1 = { inB_1, inA_1 };
  end
  always @* begin
    write_en1 = 1'h0;
    write_en1 = inValid_1;
  end
  always @* begin
    uop1_ArgsNotEqual = 1'h0;
    uop1_ArgsNotEqual = \$127 ;
  end
  always @* begin
    uop1_A_write_cptr = 1'h0;
    uop1_A_write_cptr = \$131 ;
  end
  always @* begin
    uop1_A_write_mptr = 1'h0;
    uop1_A_write_mptr = \$135 ;
  end
  always @* begin
    uop1_A_write_status = 1'h0;
    uop1_A_write_status = \$142 ;
  end
  always @* begin
    MappingTableStatus_read_addr2 = 6'h00;
    MappingTableStatus_read_addr2 = inA_1[5:0];
  end
  always @* begin
    uop1_A_status = 2'h0;
    uop1_A_status = \$144 ;
  end
  always @* begin
    allow_status_update_0 = 1'h0;
    allow_status_update_0 = \$22 ;
  end
  always @* begin
    \AlreadyReady$140  = 1'h0;
    \AlreadyReady$140  = \$146 ;
  end
  always @* begin
    uop1_A_offset_status = 3'h0;
    uop1_A_offset_status = \$148 ;
  end
  always @* begin
    MappingTableCptr_write_en2 = 1'h0;
    MappingTableCptr_write_en2 = uop1_A_write_cptr;
  end
  always @* begin
    MappingTableCptr_write_addr2 = 6'h00;
    MappingTableCptr_write_addr2 = inA_1[5:0];
  end
  always @* begin
    MappingTableCptr_write_data2 = 6'h00;
    MappingTableCptr_write_data2 = inOut_1[5:0];
  end
  always @* begin
    MappingTableStatus_write_en4 = 1'h0;
    MappingTableStatus_write_en4 = uop1_A_write_status;
  end
  always @* begin
    MappingTableStatus_write_addr4 = 6'h00;
    MappingTableStatus_write_addr4 = inA_1[5:0];
  end
  always @* begin
    MappingTableStatus_write_data4 = 2'h0;
    MappingTableStatus_write_data4 = \$150 ;
  end
  always @* begin
    uop1_B_write_cptr = 1'h0;
    uop1_B_write_cptr = \$154 ;
  end
  always @* begin
    uop1_B_write_mptr = 1'h0;
    uop1_B_write_mptr = \$156 ;
  end
  always @* begin
    uop0_argB_update_conflicted_by_1A = 1'h0;
    uop0_argB_update_conflicted_by_1A = \$24 ;
  end
  always @* begin
    uop1_B_write_status = 1'h0;
    uop1_B_write_status = \$161 ;
  end
  always @* begin
    MappingTableStatus_read_addr3 = 6'h00;
    MappingTableStatus_read_addr3 = inB_1[5:0];
  end
  always @* begin
    uop1_B_status = 2'h0;
    uop1_B_status = \$163 ;
  end
  always @* begin
    \AlreadyReady$159  = 1'h0;
    \AlreadyReady$159  = \$165 ;
  end
  always @* begin
    uop1_B_offset_status = 3'h0;
    uop1_B_offset_status = \$167 ;
  end
  always @* begin
    MappingTableCptr_write_en3 = 1'h0;
    MappingTableCptr_write_en3 = uop1_B_write_cptr;
  end
  always @* begin
    MappingTableCptr_write_addr3 = 6'h00;
    MappingTableCptr_write_addr3 = inB_1[5:0];
  end
  always @* begin
    MappingTableCptr_write_data3 = 6'h00;
    MappingTableCptr_write_data3 = inOut_1[5:0];
  end
  always @* begin
    MappingTableStatus_write_en5 = 1'h0;
    MappingTableStatus_write_en5 = uop1_B_write_status;
  end
  always @* begin
    MappingTableStatus_write_addr5 = 6'h00;
    MappingTableStatus_write_addr5 = inB_1[5:0];
  end
  assign inOut_0 = 7'h00;
  assign inA_1 = 7'h00;
  assign inB_1 = 7'h00;
  assign inA_0 = 7'h00;
  assign inB_0 = 7'h00;
  assign inValid_0 = 1'h0;
  assign inOut_1 = 7'h00;
  assign inValid_1 = 1'h0;
  assign read_data0 = 14'h0000;
  assign read_data1 = 14'h0000;
endmodule

